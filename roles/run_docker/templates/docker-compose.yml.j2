version: '3'

services:
  mysql_db:
    container_name: mysql_container
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: {{ mysql_root_password }}
      MYSQL_DATABASE: {{ mysql_database }}
      MYSQL_USER: {{ mysql_user }}
      MYSQL_PASSWORD: {{ mysql_password }}
    volumes:
      - mysql-volume:/var/lib/mysql
    networks:
      - cloud_network
      
  wordpress:
    depends_on:
      - mysql_db
    container_name: wordpress
    image: wordpress:latest
    restart: always
    environment:
      WORDPRESS_DB_HOST: mysql_db
      WORDPRESS_DB_USER: {{ mysql_user }}
      WORDPRESS_DB_PASSWORD: {{ mysql_password }}
      WORDPRESS_DB_NAME: {{ wordpress_db_name }}
    volumes:
      - wordpress-volume:/var/www/html
    networks:
      - cloud_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    depends_on:
      - mysql_db
    restart: always
    environment:
      PMA_HOST: mysql_db
      MYSQL_ROOT_PASSWORD: {{ phpmyadmin_root_password }}
      PMA_ABSOLUTE_URI: https://{{ dns_address }}/phpmyadmin/
    volumes:
      - phpmyadmin-volume:/var/www/html/phpmyadmin
    networks:
      - cloud_network

  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - nginx-volume:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www/:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - cloud_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      - nginx
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - cloud_network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  wordpress-volume:
    driver: local # Utilise le pilote local de Docker pour stocker les donnees sur le systeme hote
    driver_opts:
      type: 'none' # Pas de gestion speciale du systeme de fichier
      o: 'bind' # Permet de relier le repertoire de l'hote au conteneur
      device: '/home/project-42/data/wordpress' # Chemin de l'hote qui sera li√© au conteneur
  mysql-volume:
     driver: local
     driver_opts:
       type: 'none'
       o: 'bind'
       device: '/home/project-42/data/mysql'
  phpmyadmin-volume:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/project-42/data/phpmyadmin'
  nginx-volume:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/project-42/data/nginx'

networks:
  cloud_network:
    driver: bridge  
